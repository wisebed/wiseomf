#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

module De
  module Uniluebeck
    module Itm
      module Tr
        module Iwsn
          module Messages
            # forward declarations
            class Link < ::ProtocolBuffers::Message; end
            class AreNodesAliveRequest < ::ProtocolBuffers::Message; end
            class AreNodesConnectedRequest < ::ProtocolBuffers::Message; end
            class FlashImagesRequest < ::ProtocolBuffers::Message; end
            class ResetNodesRequest < ::ProtocolBuffers::Message; end
            class EnableVirtualLinksRequest < ::ProtocolBuffers::Message; end
            class DisableVirtualLinksRequest < ::ProtocolBuffers::Message; end
            class DisableNodesRequest < ::ProtocolBuffers::Message; end
            class EnableNodesRequest < ::ProtocolBuffers::Message; end
            class DisablePhysicalLinksRequest < ::ProtocolBuffers::Message; end
            class EnablePhysicalLinksRequest < ::ProtocolBuffers::Message; end
            class SendDownstreamMessagesRequest < ::ProtocolBuffers::Message; end
            class GetChannelPipelinesRequest < ::ProtocolBuffers::Message; end
            class ChannelHandlerConfiguration < ::ProtocolBuffers::Message; end
            class SetChannelPipelinesRequest < ::ProtocolBuffers::Message; end
            class Request < ::ProtocolBuffers::Message; end
            class SingleNodeProgress < ::ProtocolBuffers::Message; end
            class SingleNodeResponse < ::ProtocolBuffers::Message; end
            class GetChannelPipelinesResponse < ::ProtocolBuffers::Message; end
            class UpstreamMessageEvent < ::ProtocolBuffers::Message; end
            class DevicesAttachedEvent < ::ProtocolBuffers::Message; end
            class DevicesDetachedEvent < ::ProtocolBuffers::Message; end
            class NotificationEvent < ::ProtocolBuffers::Message; end
            class Event < ::ProtocolBuffers::Message; end
            class EventAck < ::ProtocolBuffers::Message; end
            class Message < ::ProtocolBuffers::Message; end

            class Link < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Link"

              required :string, :sourceNodeUrn, 1
              required :string, :targetNodeUrn, 2
            end

            class AreNodesAliveRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.AreNodesAliveRequest"

              repeated :string, :nodeUrns, 1
            end

            class AreNodesConnectedRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.AreNodesConnectedRequest"

              repeated :string, :nodeUrns, 1
            end

            class FlashImagesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.FlashImagesRequest"

              repeated :string, :nodeUrns, 1
              required :bytes, :image, 2
            end

            class ResetNodesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.ResetNodesRequest"

              repeated :string, :nodeUrns, 1
            end

            class EnableVirtualLinksRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.EnableVirtualLinksRequest"

              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Link, :links, 1
            end

            class DisableVirtualLinksRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.DisableVirtualLinksRequest"

              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Link, :links, 1
            end

            class DisableNodesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.DisableNodesRequest"

              repeated :string, :nodeUrns, 1
            end

            class EnableNodesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.EnableNodesRequest"

              repeated :string, :nodeUrns, 1
            end

            class DisablePhysicalLinksRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.DisablePhysicalLinksRequest"

              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Link, :links, 1
            end

            class EnablePhysicalLinksRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.EnablePhysicalLinksRequest"

              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Link, :links, 1
            end

            class SendDownstreamMessagesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.SendDownstreamMessagesRequest"

              repeated :string, :targetNodeUrns, 1
              required :bytes, :messageBytes, 2
            end

            class GetChannelPipelinesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.GetChannelPipelinesRequest"

              repeated :string, :nodeUrns, 1
            end

            class ChannelHandlerConfiguration < ::ProtocolBuffers::Message
              # forward declarations
              class KeyValuePair < ::ProtocolBuffers::Message; end

              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.ChannelHandlerConfiguration"

              # nested messages
              class KeyValuePair < ::ProtocolBuffers::Message
                set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.ChannelHandlerConfiguration.KeyValuePair"

                required :string, :key, 1
                required :string, :value, 2
              end

              required :string, :name, 1
              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::ChannelHandlerConfiguration::KeyValuePair, :configuration, 2
            end

            class SetChannelPipelinesRequest < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.SetChannelPipelinesRequest"

              repeated :string, :nodeUrns, 1
              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::ChannelHandlerConfiguration, :channelHandlerConfigurations, 2
            end

            class Request < ::ProtocolBuffers::Message
              # forward declarations

              # enums
              module Type
                include ::ProtocolBuffers::Enum

                set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Request.Type"

                ARE_NODES_ALIVE = 1
                ARE_NODES_CONNECTED = 2
                DISABLE_NODES = 3
                DISABLE_VIRTUAL_LINKS = 4
                DISABLE_PHYSICAL_LINKS = 5
                ENABLE_NODES = 6
                ENABLE_PHYSICAL_LINKS = 7
                ENABLE_VIRTUAL_LINKS = 8
                FLASH_IMAGES = 9
                GET_CHANNEL_PIPELINES = 10
                RESET_NODES = 11
                SEND_DOWNSTREAM_MESSAGES = 12
                SET_CHANNEL_PIPELINES = 13
              end

              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Request"

              optional :string, :reservationId, 1
              required :int64, :requestId, 2
              required ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Request::Type, :type, 3
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::AreNodesAliveRequest, :areNodesAliveRequest, 101
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::AreNodesConnectedRequest, :areNodesConnectedRequest, 102
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::DisableNodesRequest, :disableNodesRequest, 103
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::DisableVirtualLinksRequest, :disableVirtualLinksRequest, 104
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::DisablePhysicalLinksRequest, :disablePhysicalLinksRequest, 105
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::EnableNodesRequest, :enableNodesRequest, 106
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::EnablePhysicalLinksRequest, :enablePhysicalLinksRequest, 107
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::EnableVirtualLinksRequest, :enableVirtualLinksRequest, 108
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::FlashImagesRequest, :flashImagesRequest, 109
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::GetChannelPipelinesRequest, :getChannelPipelinesRequest, 110
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::ResetNodesRequest, :resetNodesRequest, 111
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::SendDownstreamMessagesRequest, :sendDownstreamMessagesRequest, 112
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::SetChannelPipelinesRequest, :setChannelPipelinesRequest, 113
            end

            class SingleNodeProgress < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.SingleNodeProgress"

              optional :string, :reservationId, 1
              required :int64, :requestId, 2
              required :string, :nodeUrn, 3
              required :uint32, :progressInPercent, 4
            end

            class SingleNodeResponse < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.SingleNodeResponse"

              optional :string, :reservationId, 1
              required :int64, :requestId, 2
              required :string, :nodeUrn, 3
              optional :bytes, :response, 4
              optional :int32, :statusCode, 5
              optional :string, :errorMessage, 6
            end

            class GetChannelPipelinesResponse < ::ProtocolBuffers::Message
              # forward declarations
              class GetChannelPipelineResponse < ::ProtocolBuffers::Message; end

              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.GetChannelPipelinesResponse"

              # nested messages
              class GetChannelPipelineResponse < ::ProtocolBuffers::Message
                set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.GetChannelPipelinesResponse.GetChannelPipelineResponse"

                required :string, :nodeUrn, 1
                repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::ChannelHandlerConfiguration, :handlerConfigurations, 2
              end

              optional :string, :reservationId, 1
              required :int64, :requestId, 2
              repeated ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::GetChannelPipelinesResponse::GetChannelPipelineResponse, :pipelines, 3
            end

            class UpstreamMessageEvent < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.UpstreamMessageEvent"

              required :string, :sourceNodeUrn, 1
              required :uint64, :timestamp, 2
              required :bytes, :messageBytes, 3
            end

            class DevicesAttachedEvent < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.DevicesAttachedEvent"

              repeated :string, :nodeUrns, 1
              required :uint64, :timestamp, 2
            end

            class DevicesDetachedEvent < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.DevicesDetachedEvent"

              repeated :string, :nodeUrns, 1
              required :uint64, :timestamp, 2
            end

            class NotificationEvent < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.NotificationEvent"

              optional :string, :nodeUrn, 1
              required :uint64, :timestamp, 2
              required :string, :message, 3
            end

            class Event < ::ProtocolBuffers::Message
              # forward declarations

              # enums
              module Type
                include ::ProtocolBuffers::Enum

                set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Event.Type"

                UPSTREAM_MESSAGE = 1
                DEVICES_ATTACHED = 2
                DEVICES_DETACHED = 3
                NOTIFICATION = 4
              end

              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Event"

              required :int64, :eventId, 1
              required ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Event::Type, :type, 2
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::UpstreamMessageEvent, :upstreamMessageEvent, 101
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::DevicesAttachedEvent, :devicesAttachedEvent, 102
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::DevicesDetachedEvent, :devicesDetachedEvent, 103
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::NotificationEvent, :notificationEvent, 104
            end

            class EventAck < ::ProtocolBuffers::Message
              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.EventAck"

              required :int64, :eventId, 1
            end

            class Message < ::ProtocolBuffers::Message
              # forward declarations

              # enums
              module Type
                include ::ProtocolBuffers::Enum

                set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Message.Type"

                REQUEST = 1
                PROGRESS = 2
                RESPONSE = 3
                GET_CHANNELPIPELINES_RESPONSE = 4
                EVENT = 5
                EVENT_ACK = 6
              end

              set_fully_qualified_name "de.uniluebeck.itm.tr.iwsn.messages.Message"

              required ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Message::Type, :type, 1
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Request, :request, 101
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::SingleNodeProgress, :progress, 102
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::SingleNodeResponse, :response, 103
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::GetChannelPipelinesResponse, :getChannelPipelinesResponse, 104
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::Event, :event, 105
              optional ::De::Uniluebeck::Itm::Tr::Iwsn::Messages::EventAck, :eventAck, 106
            end

          end
        end
      end
    end
  end
end
